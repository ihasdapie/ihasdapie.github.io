<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on chenbrian</title>
    <link>//chenbrian.ca/tags/projects/</link>
    <description>Recent content in Projects on chenbrian</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Â© 2025 â€” Brian Chen â€” All rights reserved.</copyright>
    <lastBuildDate>Thu, 13 Mar 2025 18:31:12 -0400</lastBuildDate>
    <atom:link href="//chenbrian.ca/tags/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>conway.3js</title>
      <link>//chenbrian.ca/posts/conway.3js/</link>
      <pubDate>Sat, 05 Feb 2022 22:14:08 -0500</pubDate>
      <guid>//chenbrian.ca/posts/conway.3js/</guid>
      <description>&lt;p&gt;A few weeks back one of my roommates mentioned in passing that they were thinking of writing conway&amp;rsquo;s game of life as a little widget for their website.&#xA;I thought that was pretty fun and suggested that it would be really neat if it were in 3D as well.&lt;br&gt;&#xA;&lt;br&gt;&#xA;&amp;hellip; anyways fast-forward about two hours and I was stuck in a 3-hour lecture.&#xA;So I wrote it (as is pretty evident below)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing a resume with LaTeX</title>
      <link>//chenbrian.ca/posts/latex-resume/</link>
      <pubDate>Fri, 21 Jan 2022 18:31:20 -0500</pubDate>
      <guid>//chenbrian.ca/posts/latex-resume/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s face it &amp;ndash; \( \LaTeX \)) is &lt;em&gt;unequivocally cooler&lt;/em&gt; than Word.&#xA;And you want an &lt;em&gt;unequivocally cool&lt;/em&gt; resume.&#xA;So you tried &lt;a href=&#34;https://github.com/liantze/AltaCV&#34;&gt;altacv&lt;/a&gt;, but it always got absolutely chewed up by ATS systems.&lt;/p&gt;&#xA;&lt;p&gt;And so you &lt;em&gt;yearned&lt;/em&gt; for a ðŸŒ coolðŸ¥¶ single-column layout, but you couldn&amp;rsquo;t find one.&lt;/p&gt;&#xA;&lt;p&gt;I present: my &lt;a href=&#34;https://github.com/ihasdapie/resume/&#34;&gt;fork of altacv&lt;/a&gt; with a few ðŸŒŸ &lt;strong&gt;revolutionary&lt;/strong&gt; ðŸŒŸ features.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Cut down on icons to improve pdf-to-text conversion&lt;/li&gt;&#xA;&lt;li&gt;Change to a single-column layout&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;\itag{asdf}&lt;/code&gt; command to draw an inline &amp;ldquo;tag&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;\chref&lt;/code&gt; command for hyperlinks&lt;/li&gt;&#xA;&lt;li&gt;Disabling word wrapping and hyphenation&lt;/li&gt;&#xA;&lt;li&gt;Various changes to &lt;code&gt;\makecvevent&lt;/code&gt;, etc. to improve pdf-to-text conversion&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;For an example of the output, see my &lt;a href=&#34;//chenbrian.ca/resume.pdf&#34;&gt;resume&lt;/a&gt;, or the picture below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projects</title>
      <link>//chenbrian.ca/posts/projects/</link>
      <pubDate>Mon, 13 Dec 2021 21:03:35 -0500</pubDate>
      <guid>//chenbrian.ca/posts/projects/</guid>
      <description>&lt;p&gt;// Page under construction (Actually, this page has been abandoned since early 2022&amp;hellip;) //&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;If you built a project and did not write about it, did you really build a project?&amp;rdquo;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;//chenbrian.ca/tags/projects/&#34;&gt;Browse projects by tag&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ros.org/&#34;&gt;ROS&lt;/a&gt;: Worked on the open-source Robot Operating System (ROS) as a summer intern in 2022. What was really cool about this experience was that I got to work directly with NASA on their &lt;a href=&#34;https://www.nasa.gov/viper/&#34;&gt;VIPER&lt;/a&gt; lunar rover project, supporting their use of ROS2 and Gazebo on their simulation, ground control, and autonomy systems.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ROS is essentially the &lt;a href=&#34;http://www.cse.sc.edu/~jokane/agitr/&#34;&gt;de-facto&lt;/a&gt; standard for writing robot software and can be found in Roombas, Boston Dynamic&amp;rsquo;s &lt;a href=&#34;http://wiki.ros.org/Robots/Spot&#34;&gt;spot&lt;/a&gt;, industrial robot arms, and even in &lt;a href=&#34;https://www.openrobotics.org/blog/2022/2/2/rosinspace&#34;&gt;space&lt;/a&gt;!&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#osrf-intern-presentation&#34;&gt;Intern Presentation Slides&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/3qIYnQmpa1Q?t=2501&#34;&gt;Presentation at August 2022 Gazebo Community Meeting&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ros-infrastructure/rep/pull/360&#34;&gt;REP2012: Service Introspection&lt;/a&gt;: Enabling service introspection, i.e. allowing for &lt;code&gt;ros2 service echo&lt;/code&gt; and &lt;code&gt;ros2 bag record --services&lt;/code&gt;. This highly requested feature has been absent from ROS since the introduction of ROS services in ~2011 and I&amp;rsquo;m excited to have been able to help make it a reality. See &lt;a href=&#34;https://github.com/ros2/ros2/issues/1285&#34;&gt;meta-ticket&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lots of changes to &lt;a href=&#34;https://github.com/ros2/rcl/pull/997&#34;&gt;&lt;code&gt;rcl&lt;/code&gt;&lt;/a&gt; core ROS library and &lt;a href=&#34;https://github.com/ros2/rosidl/pull/700&#34;&gt;&lt;code&gt;rosidl&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&#34;https://github.com/ros2/rosidl_typesupport/pull/127&#34;&gt;associated libs&lt;/a&gt;) code generation pipeline plus implementing support in &lt;a href=&#34;https://github.com/ros2/rclpy/pull/988&#34;&gt;&lt;code&gt;rclpy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/ros2/rclcpp/pull/1985&#34;&gt;&lt;code&gt;rclcpp&lt;/code&gt;&lt;/a&gt; client libraries and adding &lt;a href=&#34;https://github.com/ros2/ros2cli/pull/745&#34;&gt;tooling&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Helped introduce mypy compliance in rclpy, &lt;a href=&#34;https://github.com/ros2/rclpy/pull/959&#34;&gt;ParameterClient&lt;/a&gt;, fixing race conditions in certain edge cases when shutting down an &lt;code&gt;rclpy&lt;/code&gt; node, lots of miscellaneous maintenance tickets, and improving test coverage&lt;/li&gt;&#xA;&lt;li&gt;Wrote a vim plugin for the &lt;a href=&#34;http://www.alcyone.com/software/empy/&#34;&gt;empy&lt;/a&gt; templating engine: &lt;a href=&#34;https://github.com/ihasdapie/empy.vim&#34;&gt;ihasdapie/empy.vim&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.autodrive.utoronto.ca/&#34;&gt;aUToronto&lt;/a&gt;, UofT&amp;rsquo;s self-driving car team: I&amp;rsquo;ve been a part of this team since 2020 and in doing so have worn many hats. Here are some of them:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Trajectory motion planning lead: designed, implemented, and deployed local trajectory motion planning algorithms to generate kinematically feasible trajectories&lt;/li&gt;&#xA;&lt;li&gt;DLA lead, creating a inference engine to run YOLOv5 in real-time across 4 cameras with NVIDIA &lt;a href=&#34;https://github.com/NVIDIA/TensorRT/&#34;&gt;TensorRT&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Simulation &amp;amp; Testing co-lead, working on automated integration testing &amp;amp; associated ROS/ROS2 tooling Demo &lt;a href=&#34;#autotest-autoronto&#34;&gt;below&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://grocercheck.ca/&#34;&gt;GrocerCheck&lt;/a&gt;: &lt;a href=&#34;https://github.com/GrocerCheck/GrocerCheck&#34;&gt;&lt;code&gt;Github&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;#grocercheck-pitch-deck&#34;&gt;Pitch Deck&lt;/a&gt;  A website to help people reduce contact at grocery stores and essential services.  Got some press coverage too!&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.cbc.ca/news/canada/british-columbia/bc-youth-entrepreneurs-covid19-1.5784637&#34;&gt;CBC Piece&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ici.radio-canada.ca/nouvelle/1746337/emploi-pandemie-entrepreneuriat-bakd-grocercheck&#34;&gt;CBC Piece, but in French&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;CBC TV piece can be found &lt;a href=&#34;#grocercheck-cbc-interview&#34;&gt;below&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dailyhive.com/seattle/new-website-grocercheck-seattle&#34;&gt;Daily Hive&lt;/a&gt;: Toronto, Vancouver, Seattle&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.seattlepi.com/coronavirus/article/new-website-checks-grocery-store-crowds-capacity-15297891.php&#34;&gt;Seattle Pi&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cbmpress.com/bbs/board.php?bo_table=vnews&amp;amp;wr_id=5388&amp;amp;sst=wr_hit&amp;amp;sod=asc&amp;amp;sop=and&amp;amp;page=71&#34;&gt;CBM Press (Korean News)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.salamvancouver.com/news/vancouver-and-bc-news/grocercheck-%D8%A8%D9%87-%D8%B4%D9%85%D8%A7-%D8%A7%D9%85%DA%A9%D8%A7%D9%86-%D9%85%DB%8C-%D8%AF%D9%87%D8%AF-%D8%AA%D8%A7-%D8%A8%D8%B1-%D9%81%D8%B1%D9%88%D8%B4%DA%AF%D8%A7%D9%87-%D9%87%D8%A7%DB%8C/&#34;&gt;Salam Vancouver (Iranian News)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.fairchildtv.com/&#34;&gt;Fairchild TV&lt;/a&gt;: Interview broadcast on national Chinese TV&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/btrnt&#34;&gt;btrnt&lt;/a&gt;: &lt;code&gt;&amp;quot;Bot or not&amp;quot;&lt;/code&gt;: A chrome extension that implements &lt;a href=&#34;http://gltr.io/&#34;&gt;GLTR&lt;/a&gt; to use machine learning to detect and combat AI-generated text. Demo &lt;a href=&#34;#btrnt&#34;&gt;below&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/UTMIST/humerus&#34;&gt;The Humerus Bot&lt;/a&gt; A bot that leverages large NLP ML models to play &lt;a href=&#34;https://www.cardsagainsthumanity.com/&#34;&gt;Cards against Humanity&lt;/a&gt;, a popular humor-based card game. Demo &lt;a href=&#34;#humerus&#34;&gt;below&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chenbrian.ca/posts/2021/12/go-web-server/&#34;&gt;gws&lt;/a&gt;: A simple web server implemented in 111 lines of &lt;code&gt;go&lt;/code&gt; used for serving my personal website. &lt;a href=&#34;https://github.com/ihasdapie/gws&#34;&gt;&lt;code&gt;Github&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ihasdapie/dotfiles&#34;&gt;dotfiles&lt;/a&gt;: Config files I spend too much time on.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/GrocerCheck/LivePopularTimes&#34;&gt;LivePopularTimes&lt;/a&gt; GrocerCheck backend data collection library&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ihasdapie/bettermotherfuckinghugowebsite/&#34;&gt;bettermotherfuckinghugowebsite&lt;/a&gt; A minimal &lt;a href=&#34;https://gohugo.io&#34;&gt;hugo&lt;/a&gt; template inspired by &lt;a href=&#34;http://bettermotherfuckingwebsite.com/&#34;&gt;http://bettermotherfuckingwebsite.com/&lt;/a&gt; &amp;ndash; now with modern conveniences.&lt;/li&gt;&#xA;&lt;li&gt;BC Parks Foundation: &amp;lsquo;discoverparks&amp;rsquo; platform currently in public alpha.&lt;/li&gt;&#xA;&lt;li&gt;And more!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;demos&#34;&gt;Demos:&lt;/h2&gt;&#xA;&lt;h4 id=&#34;osrf-intern-presentation&#34;&gt;OSRF Intern Presentation&lt;/h4&gt;&#xA;&lt;object data=&#34;osrf_intern_pres.pdf#toolbar=0&amp;navpanes=0&#34; type=&#34;application/pdf&#34; width=100% height=&#34;700px&#34;&gt;&#xA;    &lt;embed src=&#34;osrf_intern_pres.pdf&#34;&gt;&#xA;        &lt;p&gt;This browser does not support PDFs. Please download the PDF to view it: &lt;a href=&#34;osrf_intern_pres.pdf&#34;&gt;Download PDF&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>(g)o (w)eb (s)erver</title>
      <link>//chenbrian.ca/posts/go-web-server/</link>
      <pubDate>Thu, 09 Dec 2021 20:48:45 -0500</pubDate>
      <guid>//chenbrian.ca/posts/go-web-server/</guid>
      <description>&lt;p&gt;Deploying your personal website onto github pages is &lt;em&gt;so&lt;/em&gt; 2013.&#xA;Why avoid the hassle of self-hosting with a static site generator and server?&#xA;Why not just use something tried and tested by the community?&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s just not as fun &amp;hellip; and I didn&amp;rsquo;t feel like studying for a final one afternoon.&lt;/p&gt;&#xA;&lt;p&gt;So here&amp;rsquo;s a simple 111-line golang webserver that you can use to deploy your personal website.&lt;/p&gt;&#xA;&lt;p&gt;There&amp;rsquo;s also some cute &lt;code&gt;figlet&lt;/code&gt; art&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
